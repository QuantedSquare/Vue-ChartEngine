webpackHotUpdate(2,{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/ChartDonut.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/ChartDonut.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Users_Margot_Desktop_projectsQS_Viz_node_modules_babel_runtime_corejs2_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es6.regexp.split */ \"./node_modules/core-js/modules/es6.regexp.split.js\");\n/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es6.array.sort */ \"./node_modules/core-js/modules/es6.array.sort.js\");\n/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/web.dom.iterable */ \"./node_modules/core-js/modules/web.dom.iterable.js\");\n/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es6.function.name */ \"./node_modules/core-js/modules/es6.function.name.js\");\n/* harmony import */ var core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_function_name__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3 */ \"./node_modules/d3/index.js\");\n\n\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nvar TWEEN = __webpack_require__(/*! @tweenjs/tween.js */ \"./node_modules/@tweenjs/tween.js/src/Tween.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: \"ChartDonut\",\n  props: {\n    linesData: {\n      type: Object,\n      default: function _default() {\n        return {\n          name: \"\",\n          yearsData: []\n        };\n      }\n    },\n    idDonut: {\n      type: String,\n      default: \"donut\"\n    },\n    dataDonut: Object,\n    displaySunburst: {\n      type: Object,\n      default: {\n        targetIndex: 0,\n        color: {\n          colorScale: \"interpolateRainbow\",\n          colorMin: \"rgba(12, 204, 249, 1)\",\n          colorMax: \"rgba(162, 255, 174, 1)\",\n          opacity: 0.6,\n          childrenOpacity: {\n            present: false,\n            opacity: 0.4\n          }\n        },\n        nbRing: \"all\",\n        radiusCenter: 100,\n        explanationsCenter: {\n          present: true,\n          width: 140,\n          font: {\n            size: 15,\n            family: \"sans-serif\"\n          }\n        },\n        slices: {\n          zoomable: true,\n          text: {\n            present: false,\n            font: {\n              size: 10,\n              family: \"sans-serif\"\n            },\n            rotation: \"transform string\"\n          },\n          joinSlices: {\n            present: false,\n            bornInclusion: [0, 29720540]\n          },\n          supprSlices: {\n            present: false,\n            keepData: null,\n            bornExclusion: [0, 0],\n            into: true\n          },\n          center: {\n            visibility: false\n          },\n          hover: true\n        },\n        sizes: {\n          maxW: 500,\n          center: 150,\n          sunburstW: 500,\n          legendW: 300,\n          sequenceW: 500 + 300 + 30\n        },\n        legends: {\n          present: true,\n          position: \"right\",\n          clickable: true\n        },\n        sequence: {\n          present: true,\n          font: {\n            size: 10,\n            family: \"sans-serif\"\n          },\n          position: \"top\",\n          center: false,\n          endLabel: {\n            font: {\n              size: 12,\n              family: \"sans-serif\",\n              weight: \"bold\"\n            },\n            present: true,\n            unit: \"Million d'euros\"\n          }\n        }\n      }\n    }\n  },\n  data: function data() {\n    return {\n      notResize: true,\n      targetIndex: 0,\n      currentRing: 0,\n      tweenedCoord: [],\n      targetCoords: [],\n      mLeave: false,\n      sequences: {\n        colorName: null,\n        seqNames: [],\n        labelBudget: null,\n        currentHover: null\n      },\n      centerInfos: {\n        name: null,\n        value: null\n      },\n      majW: null,\n      minW: null,\n      mixW: null,\n      labelW: null,\n      fontHeight: null,\n      explanationsPos: null,\n      chartPos: this.setChartPos(),\n      fontSlices: \"font: \" + this.displaySunburst.slices.text.font.size + \"px \" + this.displaySunburst.slices.text.font.family,\n      fontEndLabel: \"font: \" + this.displaySunburst.sequence.endLabel.font.size + \"px \" + this.displaySunburst.sequence.endLabel.font.family + \"; font-weight:\" + this.displaySunburst.sequence.endLabel.font.weight,\n      fontSeq: \"font: \" + this.displaySunburst.sequence.font.size + \"px \" + this.displaySunburst.sequence.font.family\n    };\n  },\n  model: {\n    prop: \"linesData\",\n    event: \"update:linesData\"\n  },\n  updated: function updated() {\n    this.explanationsPos = this.setExplanationsPos();\n  },\n  mounted: function mounted() {\n    this.majW = document.getElementById(\"maj\").offsetWidth / 21;\n    this.minW = document.getElementById(\"min\").offsetWidth / 21;\n    this.mixW = document.getElementById(\"mix\").offsetWidth / 21;\n    this.labelW = document.getElementById(\"label\").offsetWidth / 8;\n    this.fontHeight = document.getElementById(\"mix\").offsetHeight;\n    this.explanationsPos = this.setExplanationsPos();\n  },\n  computed: {\n    displayBudget: function displayBudget() {\n      // transform.budget = (transform.budget / 1000000).toFixed(2);\n      return this.sequences.currentHover ? this.sequences.labelBudget : (this.transformData.budget / 1000000).toFixed(2);\n    },\n    interpolator: function interpolator() {\n      if (this.displaySunburst.color.colorScale === \"interpolateCool\") return d3__WEBPACK_IMPORTED_MODULE_5__[\"interpolateCool\"];else if (this.displaySunburst.color.colorScale === \"interpolateRainbow\") return d3__WEBPACK_IMPORTED_MODULE_5__[\"interpolateRainbow\"];else if (this.displaySunburst.color.colorScale === \"interpolateRgb\") return Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"interpolateRgb\"])(this.displaySunburst.color.colorMin, this.displaySunburst.color.colorMax);\n    },\n    colorScale: function colorScale(bla) {\n      return Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"scaleOrdinal\"])(Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"quantize\"])(this.interpolator, this.transformData.children.length + 1));\n    },\n    fontExplanations: function fontExplanations() {\n      return \"font: \" + this.displaySunburst.explanationsCenter.font.size + \"px \" + this.displaySunburst.explanationsCenter.font.family + \"; width: \" + (this.displaySunburst.radiusCenter - 10) + \"px;\";\n    },\n    transformData: function transformData() {\n      var _this = this;\n\n      var transform = {\n        name: this.dataDonut.name.toUpperCase(),\n        children: [],\n        budgetProgess: [],\n        budget: 0\n      };\n      var newChildren = [];\n      var subChild = [];\n      var budget = 0;\n      var budgetProgess = [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]; //suppr slices inutiles\n\n      if (!this.displaySunburst.slices.supprSlices.keepData) {\n        transform.children = this.dataDonut.children.filter(function (child) {\n          if (_this.displaySunburst.slices.supprSlices.present) {\n            if (_this.displaySunburst.slices.supprSlices.into) return _this.displaySunburst.slices.supprSlices.bornExclusion[0] < child.budget && child.budget < _this.displaySunburst.slices.supprSlices.bornExclusion[1];else return _this.displaySunburst.slices.supprSlices.bornExclusion[0] < child.budget && child.budget <= _this.displaySunburst.slices.supprSlices.bornExclusion[1];\n          }\n\n          return child;\n        });\n      } else transform = this.dataDonut.children.filter(function (child) {\n        return child.name === _this.displaySunburst.slices.supprSlices.keepData;\n      })[0]; //join data\n\n\n      if (this.displaySunburst.slices.joinSlices.present) {\n        transform.children.forEach(function (child) {\n          if (child.budget >= _this.displaySunburst.slices.joinSlices.bornInclusion[0] && child.budget <= _this.displaySunburst.slices.joinSlices.bornInclusion[1]) {\n            subChild.push(child);\n            budget += child.budget;\n          } else newChildren.push(child);\n        });\n        newChildren.push({\n          budget: budget,\n          // budgetProgess: budgetProgess,\n          name: \"AUTRES\",\n          children: subChild\n        });\n        transform.children = newChildren;\n      } // console.log(transform.children);\n\n\n      if (!this.displaySunburst.slices.supprSlices.keepData && !this.displaySunburst.slices.joinSlices.present) {\n        transform.name = \"AUTRES\";\n        transform.children.forEach(function (child) {\n          budgetProgess[0] = budgetProgess[0].map(function (num, i) {\n            return num + child.budgetProgess[0][i].y;\n          });\n          budgetProgess[1] = budgetProgess[1].map(function (num, i) {\n            return num + child.budgetProgess[1][i].y;\n          });\n        });\n        budgetProgess = budgetProgess.map(function (array) {\n          return array.map(function (value, i) {\n            return {\n              x: transform.children[0].budgetProgess[0][i].x,\n              y: value\n            };\n          });\n        }); // console.log(\"budget progress\", budgetProgess);\n\n        this.$emit(\"update:linesData\", {\n          name: \"AUTRES\",\n          budgetProgess: budgetProgess\n        });\n        transform.budgetProgess = budgetProgess;\n      } // });\n      // }\n\n\n      if (!this.displaySunburst.slices.supprSlices.keepData) transform.children.forEach(function (child) {\n        return transform.budget += child.budget;\n      });\n      transform.children.forEach(function (child) {\n        if (child.name === \"AUTRES\") {\n          child.children.forEach(function (subchild) {\n            budgetProgess[0] = budgetProgess[0].map(function (num, i) {\n              return num + subchild.budgetProgess[0][i].y;\n            });\n            budgetProgess[1] = budgetProgess[1].map(function (num, i) {\n              return num + subchild.budgetProgess[1][i].y;\n            });\n          });\n          budgetProgess = budgetProgess.map(function (array) {\n            return array.map(function (value, i) {\n              return {\n                x: child.children[0].budgetProgess[0][i].x,\n                y: value\n              };\n            });\n          }); // console.log(\"budget progress\", budgetProgess);\n\n          child[\"budgetProgess\"] = budgetProgess;\n\n          _this.$emit(\"update:linesData\", {\n            name: \"AUTRES\",\n            budgetProgess: budgetProgess\n          });\n        }\n      });\n      return transform;\n    },\n    root: function root() {\n      var _this2 = this;\n\n      // console.log(\"trnaformData\", this.transformData);\n      var root = Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"hierarchy\"])(this.transformData).sum(function (d) {\n        return d.value;\n      }).sort(function (a, b) {\n        return b.value - a.value;\n      });\n      this.partition(root); // console.log(\"root\", root.descendants());\n      // console.log(\"root\", root);\n\n      var i = -1;\n      root.each(function (d) {\n        ++i;\n        return d.position = i;\n      });\n\n      if (this.displaySunburst.targetIndex) {\n        var p = root.descendants()[this.displaySunburst.targetIndex];\n        var maxDepth = this.searchMaxDepth(p); // console.log(maxDepth - p.depth + 1, this.displaySunburst.nbRing)\n\n        var radiusDivider = this.displaySunburst.nbRing === \"all\" || maxDepth - p.depth + 1 <= this.displaySunburst.nbRing ? maxDepth - p.depth + 1 : this.displaySunburst.nbRing;\n        var maxDomain = this.displaySunburst.nbRing === \"all\" || p.depth >= this.displaySunburst.nbRing ? maxDepth : this.displaySunburst.nbRing;\n        var newPartY = (this.radius - this.displaySunburst.radiusCenter) / radiusDivider;\n        var r0Scale = Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"scaleLinear\"])();\n        var r1Scale = Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"scaleLinear\"])();\n        r0Scale.range([this.displaySunburst.radiusCenter, this.radius - newPartY]).domain([p.depth, maxDomain]);\n        r1Scale.range([newPartY + this.displaySunburst.radiusCenter, this.radius]).domain([p.depth, maxDomain]);\n        root.each(function (d) {\n          var newX0 = d.depth > maxDomain && _this2.displaySunburst.nbRing !== \"all\" ? 0 : Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n              newX1 = d.depth > maxDomain && _this2.displaySunburst.nbRing !== \"all\" ? 0 : Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\n              newY0 = d.depth > maxDomain && _this2.displaySunburst.nbRing !== \"all\" ? 0 : newX1 - newX0 === 2 * Math.PI && d.data.name !== p.data.name || d.depth === 0 ? 0 : r0Scale(d.depth),\n              newY1 = d.depth > maxDomain && _this2.displaySunburst.nbRing !== \"all\" ? 0 : newX1 - newX0 === 2 * Math.PI && d.data.name !== p.data.name ? _this2.displaySunburst.radiusCenter : r1Scale(d.depth); // console.log(d.depth, maxDomain, newX1 - newX0, 2 * Math.PI, d.data.name, p.data.name, r0Scale(d.depth))\n\n          return d.target = {\n            x0: newX0,\n            x1: newX1,\n            y0: newY0,\n            y1: newY1\n          };\n        });\n      }\n\n      return root;\n    },\n    radius: function radius() {\n      return this.displaySunburst.sizes.sunburstW / 2;\n    },\n    partition: function partition() {\n      return Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"partition\"])().size([2 * Math.PI, this.radius]);\n    },\n    arcSlice: function arcSlice() {\n      var arcSlice = Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"arc\"])().startAngle(function (d) {\n        return d.x0;\n      }).endAngle(function (d) {\n        return d.x1;\n      }).padAngle(function (d) {\n        return Math.min((d.x1 - d.x0) / 2, 0.005);\n      }).padRadius(this.radius / 2).innerRadius(function (d) {\n        return d.y0;\n      }).outerRadius(function (d) {\n        return d.y1 - 1;\n      });\n      return arcSlice;\n    },\n    slices: function slices() {\n      var _this3 = this;\n\n      function lookUpForParentName(slice) {\n        if (slice.parent && slice.parent.depth > 0) {\n          return lookUpForParentName(slice.parent);\n        } else {\n          return slice.data.name;\n        }\n      }\n\n      var maxDepth = this.searchMaxDepth(this.root); // console.log(maxDepth - p.depth + 1, this.displaySunburst.nbRing)\n\n      var newPartY = (this.radius - this.displaySunburst.radiusCenter) / maxDepth;\n      var r0Scale = Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"scaleLinear\"])();\n      var r1Scale = Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"scaleLinear\"])();\n      r0Scale.range([this.displaySunburst.radiusCenter, this.radius - newPartY]).domain([1, maxDepth]);\n      r1Scale.range([newPartY + this.displaySunburst.radiusCenter, this.radius]).domain([1, maxDepth]);\n      var amppedSlices = this.root.descendants().map(function (slice) {\n        if (slice.parent) {\n          slice.parentName = lookUpForParentName(slice);\n        } else slice.parentName = \"\";\n\n        slice.current = {\n          x0: slice.depth > _this3.currentRing + 1 && _this3.displaySunburst.nbRing !== \"all\" ? 0 : slice.x0,\n          x1: slice.depth > _this3.currentRing + 1 && _this3.displaySunburst.nbRing !== \"all\" ? 0 : slice.x1,\n          y0: slice.depth > _this3.currentRing + 1 && _this3.displaySunburst.nbRing !== \"all\" || slice.depth === 0 ? 0 : _this3.displaySunburst.nbRing === \"all\" ? r0Scale(slice.depth) // all rings at the begining\n          : slice.y0 + _this3.displaySunburst.radiusCenter / 2,\n          // if just 1 ring at the begining\n          y1: slice.depth > _this3.currentRing + 1 && _this3.displaySunburst.nbRing !== \"all\" ? 0 : _this3.displaySunburst.nbRing === \"all\" ? r1Scale(slice.depth) : //slice.y1 + this.displaySunburst.radiusCenter / 2 // all rings at the begining\n          _this3.radius // if just 1 ring at the begining\n\n        };\n        return slice;\n      });\n      this.currentCoords = amppedSlices.map(function (slice) {\n        return slice.current;\n      });\n\n      if (amppedSlices[0].target) {\n        this.targetCoords = amppedSlices.map(function (elem) {\n          return elem.target;\n        });\n      }\n\n      if (this.displaySunburst.targetIndex === 0) this.targetCoords = this.currentCoords; // console.log(\"here\", amppedSlices[0].target, this.currentCoords, this.targetCoords, this.displaySunburst.targetIndex)\n      // nb d'anneaux au sunburst\n\n      if (this.displaySunburst.nbRing !== \"all\") amppedSlices = amppedSlices.filter(function (slice) {\n        return slice.depth <= _this3.currentRing + _this3.displaySunburst.nbRing - 1;\n      });\n      return amppedSlices;\n    },\n    texts: function texts() {\n      var _this4 = this;\n\n      var textData = this.root.descendants().map(function (d, i) {\n        var x0 = d.target ? d.target.x0 : d.current.x0,\n            x1 = d.target ? d.target.x1 : d.current.x1,\n            y0 = d.target ? d.target.y0 : d.current.y0,\n            y1 = d.target ? d.target.y1 : d.current.y1;\n        var x = (x0 + x1) / 2 * 180 / Math.PI;\n        var y = (y0 + y1) / 2;\n        var transform = \"rotate(\".concat(x - 90, \") translate(\").concat(y, \",0) rotate(\").concat(x < 180 ? 0 : 180, \")\");\n        var name = [];\n        name.push(d.data.name); // console.log(name.length * this.majW, y1 - y0, name, d.depth, this.currentRing, this.displaySunburst.targetIndex, i);\n\n        if (name[0].length * _this4.majW > y1 - y0 && y1 - y0 !== 0) {\n          var wordAr = name[0].split(/\\s+/);\n          var strArr = [];\n\n          _this4.reduceSliceText(wordAr, y1 - y0, strArr);\n\n          name = strArr;\n        } // console.log(\n        //   name.length * this.fontHeight,\n        //   ((y0 + y1) / 2) * (x1 - x0),\n        //   y0,\n        //   name\n        // );\n\n\n        var display = (y0 + y1) / 2 * (x1 - x0) > 10 && y0 !== 0 && (y0 + y1) / 2 * (x1 - x0) > name.length * _this4.fontHeight;\n        return {\n          display: display,\n          name: name,\n          transform: transform\n        };\n      });\n      return textData;\n    },\n    translateChart: function translateChart() {\n      return \"translate(\".concat(this.displaySunburst.sizes.sunburstW / 2, \", \").concat(this.displaySunburst.sizes.sunburstW / 2, \")\");\n    },\n    translatePolygon: function translatePolygon() {\n      var _this5 = this;\n\n      var antL = 0;\n      var b = [];\n      console.log(\"polygon\", this.sequences.seqNames);\n      this.sequences.seqNames.forEach(function (elem, i) {\n        var l = 0;\n        if (i !== 0) l = antL * _this5.majW + 2 + b[i - 1] + 20;\n        b.push(l);\n        antL = Math.max.apply(Math, Object(_Users_Margot_Desktop_projectsQS_Viz_node_modules_babel_runtime_corejs2_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(elem.map(function (span) {\n          return span.length;\n        })));\n        i++;\n      }); // x label budget\n\n      b.push(antL * this.majW + 2 + b[b.length - 1] + 20); // console.log(b)\n\n      return b;\n    },\n    legends: function legends() {\n      var _this6 = this;\n\n      this.proportionTextSeq();\n      var legendsNames = this.root.descendants().filter(function (elem) {\n        return elem.depth === 1;\n      }).map(function (elem) {\n        return elem.data.name;\n      });\n      var arrayName = [],\n          arrayLegendsNames = [];\n      var nbSpan = 0,\n          rectSize = 18 + 4;\n      legendsNames.forEach(function (name) {\n        // console.log(name.length * this.majW, this.majW, name.length, name, this.displaySunburst.sizes.legendW);\n        if (name.length * _this6.majW > _this6.displaySunburst.sizes.legendW - rectSize) arrayName = _this6.reduceLegendTxt(name, _this6.displaySunburst.sizes.legendW - rectSize);else arrayName = [name];\n        nbSpan += arrayName.length;\n        arrayLegendsNames.push(arrayName);\n      });\n      var longestName = 0;\n      arrayLegendsNames.forEach(function (name) {\n        name.forEach(function (elem) {\n          // console.log(elem.length)\n          if (longestName < elem.length) longestName = elem.length;\n        });\n      });\n      return {\n        names: legendsNames,\n        arrayNames: arrayLegendsNames,\n        width: longestName,\n        nbSpan: nbSpan\n      };\n    }\n  },\n  watch: {\n    targetCoords: function targetCoords(newSet, oldSet) {\n      var _this7 = this;\n\n      function animate() {\n        if (TWEEN.update()) {\n          requestAnimationFrame(animate);\n        }\n      } // console.log(\"newSet\",newSet, oldSet)\n\n\n      newSet.forEach(function (elem, i) {\n        new TWEEN.Tween(oldSet.length && oldSet[i] ? oldSet[i] : _this7.currentCoords[i]).to(elem, 1000).easing(TWEEN.Easing.Quadratic.Out).onUpdate(function (set) {\n          var x = (set.x0 + set.x1) / 2 * 180 / Math.PI;\n          var y = (set.y0 + set.y1) / 2;\n          Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"select\"])(\".\" + _this7.idDonut + \" #slice\" + i).attr(\"d\", _this7.arcSlice(set));\n          Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"select\"])(\".\" + _this7.idDonut + \" #text\" + i).attr(\"transform\", \"rotate(\".concat(x - 90, \") translate(\").concat(y, \",0) rotate(\").concat(x < 180 ? 0 : 180, \")\"));\n        }).start();\n      });\n      animate();\n    }\n  },\n  methods: {\n    translateLegend: function translateLegend(names, index, legend) {\n      var h = 0; // console.log(\"names\", names, legend.join(\" \").trim());\n\n      if (index === 0) return \"translate(0, \" + 33 * index + \")\";else {\n        for (var i = 0; i < index; i++) {\n          if (names[i].length === 1) h += 18 + 15;else h += 2.5 + names[i].length * 12 + (names[i].length - 1) + 15;\n        }\n\n        return \"translate(0, \" + h + \")\";\n      }\n    },\n    reduceLegendTxt: function reduceLegendTxt(name, legendTxtSize) {\n      var _this8 = this;\n\n      var words = name.split(/\\s+/),\n          partName = \"\",\n          arrayName = [],\n          a = 0;\n      words.some(function (word, i) {\n        if (partName.concat(\" \", word).length * _this8.majW < legendTxtSize) partName = partName.concat(\" \", word).trim();else if (a === 0) return a = i;\n      });\n\n      if (a) {\n        arrayName.push(partName);\n        words = words.slice(a);\n\n        if (words.join(\" \").length * this.majW > legendTxtSize) {\n          this.reduceLegendTxt(words.join(\" \").trim(), arrayName);\n        } else {\n          arrayName.push(words.join(\" \").trim());\n        }\n      } else arrayName.push(name);\n\n      return arrayName;\n    },\n    setChartPos: function setChartPos() {\n      var proportion = window.innerWidth > 600 && this.displaySunburst.legends.present ? \"xs8\" : \"xs12\";\n      var offset = this.displaySunburst.sizes.offset;\n      return proportion + \" \" + offset;\n    },\n    onResize: function onResize() {\n      var doc = document.getElementsByClassName(this.idDonut);\n      var child = doc[0].children[0].children;\n      var seqW = child.sequence.offsetWidth;\n      var legW = child.sidebar ? child.sidebar.offsetWidth : null; // console.log(\"resize\", child, legW, this.displaySunburst.sizes.legendW, this.displaySunburst.sizes.sequenceW);\n\n      if (this.notResize === false) {\n        this.displaySunburst.sizes.sequenceW = seqW;\n        this.displaySunburst.sizes.legendW = legW;\n      } else this.notResize = false;\n\n      this.explanationsPos = this.setExplanationsPos();\n      if (window.innerWidth > 600 && this.displaySunburst.legends.present) this.chartPos = \"xs8\";else this.chartPos = \"xs12\";\n    },\n    searchMaxDepth: function searchMaxDepth(p) {\n      var _this9 = this;\n\n      var maxDepth = 0;\n      p.each(function (elem) {\n        if (elem.children) elem.children.forEach(function (child) {\n          _this9.searchMaxDepth(child);\n        });\n        maxDepth = elem.depth;\n      });\n      return maxDepth;\n    },\n    visibleArc: function visibleArc(index, slice) {\n      if (index === 0 && !this.displaySunburst.slices.center.visibility || this.root.descendants()[index].target && this.root.descendants()[index].target.y0 === 0 && this.displaySunburst.explanationsCenter.present) return 0;\n      return slice.children ? this.displaySunburst.color.opacity : this.displaySunburst.color.childrenOpacity.present ? this.displaySunburst.color.childrenOpacity.opacity : this.displaySunburst.color.opacity;\n    },\n    sizeWords: function sizeWords(wordAr, ringSize) {\n      var _this10 = this;\n\n      var sizeOk = true;\n      wordAr.forEach(function (word) {\n        if (word.length * _this10.majW > ringSize) sizeOk = false;\n      });\n      return sizeOk;\n    },\n    reduceSliceText: function reduceSliceText(wordAr, ringSize, strArr) {\n      var _this11 = this;\n\n      var str = \"\";\n      var a = 0;\n\n      if (this.sizeWords(wordAr, ringSize)) {\n        wordAr.forEach(function (word, i) {\n          if (i === 0 && str.concat(\"\", word).length * _this11.majW < ringSize) {\n            str = str.concat(\"\", word);\n          } else if (str.concat(\" \", word).length * _this11.majW < ringSize) {\n            str = str.concat(\" \", word);\n            a = i;\n          }\n        });\n        wordAr = wordAr.slice(a + 1);\n        if (str) strArr.push(str); // console.log(\"ici\", str, wordAr, wordAr.join(\" \").length);\n\n        if (wordAr.join(\" \").length * this.majW > ringSize) {\n          this.reduceSliceText(wordAr, ringSize, strArr);\n        } else {\n          if (wordAr.length) strArr.push(wordAr.join(\" \"));\n        }\n      }\n    },\n    smallestFirstWordsArr: function smallestFirstWordsArr(allWordsArr, reducer, sizeSeq, sizeLabel, maxWordLength) {\n      var fullNameLength = allWordsArr.map(function (arrayW) {\n        return arrayW.join(\" \").length;\n      });\n      allWordsArr = allWordsArr.map(function (arrayW, i) {\n        // console.log(\"maxLen\", maxWordLength[i], arrayW.join(\" \").length, arrayW.join(\" \"), Math.max(...fullNameLength))\n        if (arrayW.join(\" \").length === Math.max.apply(Math, Object(_Users_Margot_Desktop_projectsQS_Viz_node_modules_babel_runtime_corejs2_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(fullNameLength)) || arrayW.join(\" \").length > maxWordLength[i]) arrayW = arrayW.slice(0, arrayW.length - 1);\n        return arrayW;\n      });\n      var array = allWordsArr.map(function (arrayW, i) {\n        // console.log(\"join\",arrayW.join(\" \").length, maxWordLength[i], arrayW.join(\" \").length > maxWordLength[i] ? arrayW.join(\" \").length : maxWordLength[i])\n        return arrayW.join(\" \").length > maxWordLength[i] ? arrayW.join(\" \").length : maxWordLength[i]; // return arrayW.join(\" \").length * this.majW + 20\n      });\n      console.log(\"array\", array, array.reduce(reducer), sizeSeq - sizeLabel);\n      var sumW = array.reduce(reducer);\n      if (sumW * this.majW + maxWordLength.length * 25 > sizeSeq - sizeLabel) return this.smallestFirstWordsArr(allWordsArr, reducer, sizeSeq, sizeLabel, maxWordLength);\n      allWordsArr = allWordsArr.map(function (arrayW) {\n        return arrayW.join(\" \");\n      });\n      return allWordsArr;\n    },\n    reduceNbW: function reduceNbW(allWordsArr, sizeSeq, sizeLabel) {\n      console.log(\"reduceNB\", allWordsArr);\n      var nbWords = allWordsArr.map(function (arrayW) {\n        return arrayW.length;\n      });\n      var maxWordLength = allWordsArr.map(function (arrayW) {\n        return Math.max.apply(Math, Object(_Users_Margot_Desktop_projectsQS_Viz_node_modules_babel_runtime_corejs2_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arrayW.map(function (word) {\n          return word.length;\n        })));\n      });\n\n      var reducer = function reducer(accumulator, currentValue) {\n        return accumulator + currentValue;\n      };\n\n      console.log(maxWordLength, maxWordLength.reduce(reducer), this.majW, maxWordLength.reduce(reducer) * this.majW, sizeSeq - sizeLabel, sizeSeq, allWordsArr);\n\n      if (maxWordLength.reduce(reducer) * this.majW + maxWordLength.length * 25 < sizeSeq - sizeLabel) {\n        return allWordsArr = this.smallestFirstWordsArr(allWordsArr, reducer, sizeSeq, sizeLabel, maxWordLength);\n      } else return;\n    },\n    reduceSecondLine: function reduceSecondLine(word, tspan, newSpan) {\n      console.log(\"here\");\n      var splitSpan = tspan.split(/\\s+/);\n      var l = 0,\n          index = 0;\n      console.log(tspan);\n      splitSpan.forEach(function (spanWord, i) {\n        console.log(\"spanW\", spanWord);\n        l += spanWord.length + 1;\n        if (l <= word.length + 1) index = i;\n      });\n      var newSpan1 = splitSpan.slice(0, index + 1).join(\" \");\n      var newSpan2 = splitSpan.length > 1 ? splitSpan.slice(index + 1, splitSpan.length).join(\" \") : null;\n      newSpan.push(newSpan1);\n      if (newSpan2 && newSpan2.length > word.length) return this.reduceSecondLine(word, newSpan2, newSpan);else if (newSpan2) newSpan.push(newSpan2);\n      return newSpan;\n    },\n    blabla: function blabla(endLabelW, endLabelP, seqNamesBase) {\n      var _this12 = this;\n\n      var wordAr = seqNamesBase.map(function (elem) {\n        return elem[0].split(/\\s+/);\n      });\n      wordAr = this.reduceNbW(wordAr, this.displaySunburst.sizes.sequenceW, endLabelW + endLabelP);\n      console.log(\"wordAr\", wordAr);\n\n      if (wordAr) {\n        return seqNamesBase.map(function (elem, i) {\n          console.log(\"seqbase\", elem, wordAr[i]);\n\n          if (elem[0] !== wordAr[i]) {\n            var tspan = elem[0].split(wordAr[i] + \" \");\n            console.log(\"tspan\", tspan);\n            elem = [wordAr[i], tspan[1]];\n\n            if (tspan[1] && wordAr[i].length < tspan[1].length) {\n              var newSpan = [];\n              newSpan = _this12.reduceSecondLine(wordAr[i], tspan[1], newSpan);\n              elem = [wordAr[i]].concat(newSpan);\n            }\n          }\n\n          return elem;\n        });\n      } else {\n        var newSeqNames = seqNamesBase.map(function (elem, i) {\n          if (i !== seqNamesBase.length - 1) elem = [\"...\"];\n          return elem;\n        });\n        return this.blabla(endLabelW, endLabelP, newSeqNames);\n      }\n    },\n    proportionTextSeq: function proportionTextSeq() {\n      var _this13 = this;\n\n      var newSeqNames = this.sequences.seqNames; // console.log(\"seqname\", newSeqNames);\n\n      if (this.sequences.seqNames.length) {\n        var array = this.sequences.seqNames.map(function (elem) {\n          return elem[0].length * _this13.majW + 20;\n        }); // pas encore en span\n\n        var reducer = function reducer(accumulator, currentValue) {\n          return accumulator + currentValue;\n        };\n\n        var endLabelW = (this.sequences.labelBudget.length + this.displaySunburst.sequence.endLabel.unit.length + 1) * this.labelW,\n            endLabelP = 15;\n        var sumW = array.reduce(reducer); // console.log(\"seqw\", this.displaySunburst.sizes.sequenceW);\n        // console.log(\n        //   \"Wendlabel\",\n        //   endLabelW,\n        //   array,\n        //   sumW,\n        //   this.displaySunburst.sizes.sequenceW - endLabelW - endLabelP\n        // );\n\n        if (sumW > this.displaySunburst.sizes.sequenceW - endLabelW - endLabelP) {\n          // wordAr = this.reduceNbW(\n          //   wordAr,\n          //   this.displaySunburst.sizes.sequenceW,\n          //   endLabelW + endLabelP\n          // );\n          // console.log(\"wordAr\", wordAr);\n          // if (wordAr) {\n          // newSeqNames = this.sequences.seqNames.map((elem, i) => {\n          //       // console.log(elem, wordAr[i])\n          //       if (elem[0] !== wordAr[i]) {\n          //         let tspan = elem[0].split(wordAr[i] + \" \");\n          //         elem = [wordAr[i], tspan[1]];\n          //         if (wordAr[i].length < tspan[1].length) {\n          //           let newSpan = [];\n          //           newSpan = this.reduceSecondLine(\n          //             wordAr[i],\n          //             tspan[1],\n          //             newSpan\n          //           );\n          //           elem = [wordAr[i]].concat(newSpan);\n          //         }\n          //       }\n          //       return elem;\n          //     })\n          // }\n          // else {\n          //   newSeqNames = this.sequences.seqNames.map((elem, i) => {\n          //     if(i !== this.sequences.seqNames.length - 1)\n          //       elem = [\"...\"]\n          //     return elem\n          //   });\n          // }\n          var _newSeqNames = this.blabla(endLabelW, endLabelP, this.sequences.seqNames);\n\n          this.sequences.seqNames = _newSeqNames; // console.log(\"new\",newSeqNames)\n        }\n      }\n    },\n    notCenter: function notCenter(names) {\n      // console.log(\"notcenter\", names, names[0][0], this.root.descendants()[0].data.name.toUpperCase())\n      if (names[0][0] === this.root.descendants()[0].data.name.toUpperCase() && !this.displaySunburst.slices.center.visibility && names.length === 1) {\n        return false;\n      }\n\n      return true;\n    },\n    polygonPoints: function polygonPoints(allSpan, allNames) {\n      // console.log(\"points\", allNames)\n      var nbSpanText = allNames.map(function (span) {\n        return span.length;\n      });\n      var maxLSpan = Math.max.apply(Math, Object(_Users_Margot_Desktop_projectsQS_Viz_node_modules_babel_runtime_corejs2_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(allSpan.map(function (span) {\n        return span.length;\n      })));\n      var maxH = Math.max.apply(Math, Object(_Users_Margot_Desktop_projectsQS_Viz_node_modules_babel_runtime_corejs2_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(nbSpanText)); // console.log(\"span\",allSpan, maxLSpan)\n\n      var a = maxLSpan * this.majW + 20,\n          //padding\n      b = a + 10,\n          //pointe\n      c = maxH > 2 ? (maxH + 1) * 10 : 30,\n          d = maxH > 2 ? 5 + maxH * 5 : 15;\n      return \"0,0 \" + a + \",0 \" + b + \",\" + d + \" \" + a + \",\" + c + \" 0,\" + c + \" 10,\" + d;\n    },\n    ySpan: function ySpan(sequence, allNames) {\n      var allLength = allNames.map(function (elem) {\n        return elem.length;\n      });\n      var maxL = Math.max.apply(Math, Object(_Users_Margot_Desktop_projectsQS_Viz_node_modules_babel_runtime_corejs2_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(allLength)); // console.log(maxL, allNames)\n\n      var ySpanScale = Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"scaleLinear\"])();\n      ySpanScale.range([(maxL + 1) * 5, 15]).domain([1, maxL]); // console.log(ySpanScale(sequence.length))\n\n      var a = sequence.length === maxL ? maxL === 1 ? 15 : 13 : ySpanScale(sequence.length); // console.log(sequence, a)\n\n      return a;\n    },\n    clicked: function clicked(index, idDonut) {\n      if (idDonut === \"donut2\") {\n        this.currentRing = this.root.descendants()[index].depth;\n      } // console.log(\"dataDonut in click\", this.root.descendants()[index])\n\n\n      this.$emit(\"onClick\", this.root.descendants()[index], idDonut, index);\n    },\n    setExplanationsPos: function setExplanationsPos() {\n      var newDiv = document.createElement(\"div\"); // console.log(this.sequences, this.transformData)\n\n      var name = this.sequences.currentHover ? this.sequences.currentHover : this.transformData.name;\n      newDiv.innerHTML = name.toUpperCase() + \"<br><br><span>\" + this.sequences.labelBudget + \" \" + this.displaySunburst.sequence.endLabel.unit + \"</span>\";\n      newDiv.setAttribute(\"id\", \"explanation\");\n      newDiv.setAttribute(\"style\", this.fontExplanations);\n      var currentDiv = document.getElementById(\"app\");\n      currentDiv.appendChild(newDiv);\n      var donut = document.getElementsByClassName(this.idDonut),\n          chartW = donut[0].children[0].children.chart.offsetWidth; // console.log(chartW, this.displaySunburst.sizes.maxW)\n\n      if (chartW > 200 && chartW < this.displaySunburst.sizes.maxW) {\n        this.displaySunburst.sizes.sunburstW = chartW;\n        this.displaySunburst.radiusCenter = chartW / 4 > this.displaySunburst.sizes.center ? this.displaySunburst.sizes.center : chartW / 4;\n      } else if (chartW >= this.displaySunburst.sizes.maxW) {\n        this.displaySunburst.sizes.sunburstW = this.displaySunburst.sizes.maxW;\n        this.displaySunburst.radiusCenter = this.displaySunburst.sizes.center;\n      }\n\n      var hDiv = newDiv.offsetHeight;\n      var tDiv = this.displaySunburst.sizes.sunburstW / 2 - hDiv / 2;\n      var lDiv = chartW / 2 - (this.displaySunburst.radiusCenter - 10) / 2;\n      currentDiv.removeChild(newDiv);\n      return \"top: \" + tDiv + \"px; left: \" + lDiv + \"px;\";\n    },\n    // legendOver(index) {\n    //   let doc = this;\n    //   function overChildren(slice, idDonut) {\n    //     if (slice.children && slice.children.length) {\n    //       slice.children.forEach(child => {\n    //         select(\".\" + idDonut + \" #slice\" + child.position).style(\n    //           \"opacity\",\n    //           1\n    //         );\n    //         if (child.children && child.children.length)\n    //           overChildren(child, idDonut);\n    //       });\n    //     }\n    //   }\n    //   selectAll(\".\" + doc.idDonut + \" #chart path\").style(\"opacity\", 0.3);\n    //   select(\".\" + doc.idDonut + \" #slice\" + index).style(\"opacity\", 1);\n    //   overChildren(this.root.descendants()[index], this.idDonut);\n    // },\n    // lengendLeave() {\n    //   let doc = this;\n    //   this.mLeave = true;\n    //   const turnOnHover = () => {\n    //       doc.mLeave = false;\n    //     };\n    //   // console.log(\"leave\",this.mLeave)\n    //   selectAll(\".\" + this.idDonut + \" #chart path\")\n    //     .transition()\n    //     .duration(500)\n    //     .style(\"opacity\", 1)\n    //     .on(\"end\", function() {\n    //       console.log(\"end\")\n    //       turnOnHover();\n    //     });\n    // },\n    mouseover: function mouseover(index) {\n      var doc = this;\n\n      function mouseOnCenter(doc) {\n        doc.mLeave = true;\n\n        var turnOnHover = function turnOnHover() {\n          doc.mLeave = false;\n          doc.sequences.seqNames = [];\n          doc.sequences.currentHover = null;\n        };\n\n        Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"selectAll\"])(\".\" + doc.idDonut + \" #chart path\").transition().duration(500).style(\"opacity\", 1).on(\"end\", function () {\n          turnOnHover();\n        });\n      }\n\n      function overParents(slice, doc, display, idDonut) {\n        if (slice.parent && slice.parent.depth > 0 && slice.parent.target && slice.parent.target.y0 !== 0 && display.explanationsCenter.present || display.nbRing === \"all\" && slice.parent && !slice.parent.target && slice.parent.depth > 0) {\n          Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"select\"])(\".\" + idDonut + \" #slice\" + slice.parent.position).style(\"opacity\", 1);\n          overParents(slice.parent, doc, display, idDonut);\n        } else if (slice.depth === 0 && !display.slices.center.visibility || display.explanationsCenter.present && slice.target && slice.target.y0 === 0) {\n          mouseOnCenter(doc);\n        }\n      }\n\n      function setSequence(slice) {\n        if (slice.parent && slice.parent.depth > 0) {\n          seqNames.push(slice.parent.data.name.toUpperCase());\n          setSequence(slice.parent);\n        }\n      }\n\n      Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"selectAll\"])(\".\" + doc.idDonut + \" #chart path\").style(\"opacity\", 0.3);\n      Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"select\"])(\".\" + doc.idDonut + \" #slice\" + index).style(\"opacity\", 1);\n      overParents(this.root.descendants()[index], this, this.displaySunburst, this.idDonut);\n      this.sequences.colorName = this.root.descendants()[index].parentName;\n      this.sequences.currentHover = index && this.root.descendants()[index].target && this.root.descendants()[index].target.y0 !== 0 || index && !this.root.descendants()[index].target ? this.root.descendants()[index].data.name : null;\n      this.explanationsPos = this.setExplanationsPos();\n      var seqNames = [];\n      seqNames.push(this.root.descendants()[index].data.name.toUpperCase());\n      setSequence(this.root.descendants()[index]);\n      seqNames = seqNames.reverse();\n      this.sequences.seqNames = seqNames.map(function (elem) {\n        var arrayName = [];\n        arrayName.push(elem);\n        return arrayName;\n      });\n      var budget = this.root.descendants()[index].data.value ? this.root.descendants()[index].data.value / 1000000 : this.root.descendants()[index].data.budget / 1000000;\n      this.sequences.labelBudget = budget.toFixed(2);\n    },\n    mouseleave: function mouseleave() {\n      var _this14 = this;\n\n      this.mLeave = true;\n\n      var turnOnHover = function turnOnHover() {\n        _this14.mLeave = false;\n        _this14.sequences.seqNames = [];\n        _this14.sequences.currentHover = null;\n      };\n\n      Object(d3__WEBPACK_IMPORTED_MODULE_5__[\"selectAll\"])(\".\" + this.idDonut + \" #chart path\").transition().duration(500).style(\"opacity\", 1).on(\"end\", function () {\n        turnOnHover();\n      });\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/components/ChartDonut.vue?vue&type=script&lang=js&\n");

/***/ })

})